// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OlympGuide.Infrastructre;

#nullable disable

namespace OlympGuide.Infrastructre.Migrations
{
    [DbContext(typeof(OlympGuideDbContext))]
    [Migration("20240416175305_AddedAddress")]
    partial class AddedAddress
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OlympGuide.Domain.Features.SportField.SportFieldType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<float>("Latitude")
                        .HasColumnType("real")
                        .HasColumnName("latitude");

                    b.Property<float>("Longitude")
                        .HasColumnType("real")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_sport_fields");

                    b.ToTable("sport_fields", (string)null);
                });

            modelBuilder.Entity("OlympGuide.Domain.Features.SportFieldProposal.SportFieldProposalType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("SportFieldAddress")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sport_field_address");

                    b.Property<string>("SportFieldDescription")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sport_field_description");

                    b.Property<float>("SportFieldLatitude")
                        .HasColumnType("real")
                        .HasColumnName("sport_field_latitude");

                    b.Property<float>("SportFieldLongitude")
                        .HasColumnType("real")
                        .HasColumnName("sport_field_longitude");

                    b.Property<string>("SportFieldName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sport_field_name");

                    b.Property<int>("State")
                        .HasColumnType("integer")
                        .HasColumnName("state");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_sport_field_proposals");

                    b.ToTable("sport_field_proposals", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
