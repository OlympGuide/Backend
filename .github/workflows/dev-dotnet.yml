# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: dev-stage

on:
  push:
    branches: [ "development" ]
  
permissions:
  contents: read
  packages: write

env:
  # GENERAL
  BACKEND_DIRECTORY: OlympGuide
  # DOCKER env
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/webserver
  ORGANISATION: OlympGuide
  DOCKERFILE-PATH-DEVELOPMENT: Dockerfile.development
  # HELM env
  HELM_DIRECTORY: helm
  HELM_VALUES_FILE: values-stage.yaml
  HELM_RELEASE_NAME: olympguide-backend
  # K8S env
  K8S_API: https://pm4.init-lab.ch/k8s/clusters/local
  K8S_NAMESPACE: olymp-guide-stage

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.BACKEND_DIRECTORY }}
    - name: Build
      run: dotnet build --no-restore
      working-directory: ${{ env.BACKEND_DIRECTORY }}
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ${{ env.BACKEND_DIRECTORY }}

  upload-artifact:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: create directory
        run: mkdir app
        
      - name: Build Project
        run: dotnet publish ./OlympGuide/OlympGuide.csproj -c Release -o ./app /p:UseAppHost=false

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: backend-artifact
          path: app/
          retention-days: 20

  docker-build:
    needs: upload-artifact
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: backend-artifact
          path: ./OlympGuide/app/

      - name: image-build-lastest
        uses: ./.github/workflows/image-build
        with:
          working-directory: ${{ env.BACKEND_DIRECTORY }}
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          tags: latest
          github-token: ${{ secrets.GITHUB_TOKEN }}
          dockerfile: ${{ env.DOCKERFILE-PATH-DEVELOPMENT }}

      - name: image-build-tagged
        uses: ./.github/workflows/image-build
        with:
          working-directory: ${{ env.BACKEND_DIRECTORY }}
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          tags: version.${{ github.run_number}}.0.0
          github-token: ${{ secrets.GITHUB_TOKEN }} 
          dockerfile: ${{ env.DOCKERFILE-PATH-DEVELOPMENT }} 

      - name: Save Tag Name
        run: echo "version.${{ github.run_number }}.0.0" > version.txt

      - name: Upload Tag Name Artifact
        uses: actions/upload-artifact@v2
        with:
          name: tag-name
          path: version.txt
        
  deploy-helm-ci:
    runs-on: ubuntu-22.04
    needs: [docker-build]
    environment: staging

    steps:
      - name: checkout sources
        uses: actions/checkout@v4
      - name: deploy
        uses: ./.github/workflows/helm-release
        with:
          helm-directory: ${{ env.HELM_DIRECTORY }}
          k8s-token: ${{ secrets.K8S_TOKEN }}
          k8s-api: ${{ env.K8S_API }}
          k8s-namespace: ${{ env.K8S_NAMESPACE }}
          helm-release-name: ${{ env.HELM_RELEASE_NAME }}
          helm-values-file: ${{ env.HELM_VALUES_FILE }}