# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  
env:
  # GENERAL
  BACKEND_DIRECTORY: OlympGuide
  # DOCKER env
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/webserver
  ORGANISATION: OlympGuide

  # HELM env
  HELM_DIRECTORY: helm
  HELM_RELEASE_NAME: olympguid
  # K8S env
  K8S_API: https://pm4.init-lab.ch/k8s/clusters/local
  K8S_NAMESPACE: olympguide-stage

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.BACKEND_DIRECTORY }}
    - name: Build
      run: dotnet build --no-restore
      working-directory: ${{ env.BACKEND_DIRECTORY }}
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ${{ env.BACKEND_DIRECTORY }}

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: latest-tag
        run: |
          echo "fetching tags"
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "latest")
          echo "parsed tag: $TAG"
          echo "image-tag=$TAG" >> $GITHUB_OUTPUT

      # - name: Log in to GitHub Container Registry
      #   uses: docker/login-action@v3.1.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{secrets.GITHUB_TOKEN}}
          
      # - name: Build and push Docker image
      #   run: |
      #     docker build -t ${{env.IMAGE_NAME}}:latest -f ${{env.BACKEND_DIRECTORY}}/Dockerfile ${{ env.BACKEND_DIRECTORY }}
      #     echo "push image: ${{ env.IMAGE_NAME }}:${{ steps.latest-tag.outputs.image-tag }}"
      #     docker push ${{ env.IMAGE_NAME }}:${{ steps.latest-tag.outputs.image-tag }}

      - name: image-build
        uses: ./.github/workflows/image-build
        with:
          working-directory: ${{ env.BACKEND_DIRECTORY }}
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.latest-tag.outputs.image-tag }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
