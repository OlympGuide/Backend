# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: production

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
 
    ## Permissions
permissions:
  contents: read
  packages: write

env:
  # GENERAL
  BACKEND_DIRECTORY: OlympGuide
  # DOCKER env
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/webserver
  ORGANISATION: OlympGuide

  # HELM env
  HELM_DIRECTORY: helm
  HELM_RELEASE_NAME: olympguide
  # K8S env
  K8S_API: https://pm4.init-lab.ch/k8s/clusters/local
  K8S_NAMESPACE: olymp-guide-prod

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.BACKEND_DIRECTORY }}
    - name: Build
      run: dotnet build --no-restore
      working-directory: ${{ env.BACKEND_DIRECTORY }}
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ${{ env.BACKEND_DIRECTORY }}

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: latest-tag
        run: |
          echo "fetching tags"
          TAG=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "version.${{ github.run_number }}")
          echo "parsed tag: $TAG"
          echo "image-tag=$TAG" >> $GITHUB_OUTPUT

      - name: image-build
        uses: ./.github/workflows/image-build
        with:
          working-directory: ${{ env.BACKEND_DIRECTORY }}
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.latest-tag.outputs.image-tag }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          
  deploy-helm-ci:
    runs-on: ubuntu-22.04
    needs: [docker-build]
    environment: staging

    steps:
      - name: checkout sources
        uses: actions/checkout@v4
      - name: deploy
        uses: ./.github/workflows/helm-release
        with:
          kube-config: ${{ secrets.KUBE_CONFIG }}
          helm-directory: ${{ env.HELM_DIRECTORY }}
          k8s-token: ${{ secrets.K8S_TOKEN }}
          k8s-api: ${{ env.K8S_API }}
          k8s-namespace: ${{ env.K8S_NAMESPACE }}
          helm-release-name: ${{ env.HELM_RELEASE_NAME }}
          helm-values-file: values.yaml
          image-tag: ${{ needs.docker-build.outputs.latest-tag }}
          helm-values-image-key: backend.production.image.tag