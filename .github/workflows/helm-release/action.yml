name: helm-release
description: packages and releases the helm chart
inputs:
  helm-directory:
    required: true
    description: directory of helm sources
  k8s-token:
    required: true
    description: k8s service account token
  k8s-api:
    required: true
    description: k8s api server
  k8s-namespace:
    required: true
    description: k8s namespace
  helm-release-name:
    required: true
    description: helm release name
  helm-values-file:
    required: true
    description: value file
  helm-values-image-key:
    required: true
    description: image key in values file
  image-tag:
    required: true
    description: image tag

runs:
  using: "composite"
  steps:
    - name: setup kubectl
      uses: azure/setup-kubectl@v3
    - name: configure kubectl
      shell: bash
      run: |-
        kubectl config set-credentials sa --token=${{ inputs.k8s-token }}
        kubectl config set-cluster default --server=${{ inputs.k8s-api }}
        kubectl config set-context sa/ci-cd --user=sa --cluster=default --namespace=${{ inputs.k8s-namespace }}
        kubectl config use-context sa/ci-cd 
    - name: upgrading helm release
      shell: bash
      run: |-
        helm package ${{ github.workspace }}/${{ inputs.helm-directory }}
        package=$(find . -name "${CHART_NAME}*.tgz")
        echo "package file: ${{ github.workspace }}/${{ inputs.helm-directory }}/${{ inputs.helm-values-file }}"
        echo "image key-value: ${{ inputs.helm-values-image-key }}=${{ inputs.image-tag }}"
        helm upgrade ${{ inputs.helm-release-name }} $package -f ${{ github.workspace }}/${{ inputs.helm-directory }}/${{ inputs.helm-values-file }} --install -n ${{ inputs.k8s-namespace }} --set ${{ inputs.helm-values-image-key }}=${{ inputs.image-tag }} --wait
